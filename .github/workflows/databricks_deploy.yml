name: Deploy to Databricks

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install jq
      run: sudo apt-get install jq

    - name: Update Databricks Cluster
      env:
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      run: |
        CLUSTER_CONFIG=$(cat databricks_bundle/clusters/cluster_config.json)
        CLUSTER_ID=$(curl -X GET -H "Authorization: Bearer $DATABRICKS_TOKEN" "$DATABRICKS_HOST/api/2.0/clusters/list" | jq -r '.clusters[] | select(.cluster_name == "example-cluster") | .cluster_id')
        
        if [ -z "$CLUSTER_ID" ]; then
          echo "Cluster does not exist. Creating a new cluster."
          curl -X POST -H "Authorization: Bearer $DATABRICKS_TOKEN" -H "Content-Type: application/json" -d "$CLUSTER_CONFIG" "$DATABRICKS_HOST/api/2.0/clusters/create"
        else
          echo "Cluster exists. Updating the cluster."
          curl -X POST -H "Authorization: Bearer $DATABRICKS_TOKEN" -H "Content-Type: application/json" -d "$(echo $CLUSTER_CONFIG | jq --arg CLUSTER_ID "$CLUSTER_ID" '.clusters[0] | . + {cluster_id: $CLUSTER_ID}')" "$DATABRICKS_HOST/api/2.0/clusters/edit"
        fi
